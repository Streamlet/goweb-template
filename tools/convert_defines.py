#!/usr/bin/python
# -*- coding: UTF-8 -*-


import os
import re


def convert_defines(source, target):
    with open(source, encoding='utf-8') as f:
        content = f.read()
    if content:
        lines = content.split('\n')
    defines = '// auto generated by script. Do not modify.\n\n'
    block_constant = ''
    block_name_value_map = ''
    block_value_display_map = ''
    block_value_type_map = ''
    current = None
    for line in lines:
        # AdminPrivilege_All                  = "*"             // 所有权限
        # 11111111111111 222333333333333333333   4 5555555555555   6666666
        m = re.match(
            r'^\s*(\w+)_(\w+)(\s+)=\s*("?\S+"?)(\s+)//\s*(\S*)(?:\s*\[([^\]]*)\])?', line)
        if not m:
            continue
        if m[1] != current:
            if current is not None:
                block_constant += '\n'
                block_name_value_map += '};\n\n'
                block_value_display_map += '};\n\n'
                block_value_type_map += '};\n\n'
                defines += block_constant
                defines += block_name_value_map
                defines += block_value_display_map
                if block_value_type_map.count('\n') > 3:
                    defines += block_value_type_map
            block_constant = ''
            block_name_value_map = 'var %sDefine = {\n' % m[1]
            block_value_display_map = 'var %s = {\n' % m[1]
            block_value_type_map = 'var %sType = {\n' % m[1]
            current = m[1]
        v = m[4].replace('"', "'")
        block_constant += "var %s_%s%s= %s;\n" % (m[1], m[2], m[3], v)
        block_name_value_map += "    '%s_%s':%s%s,\n" % (m[1], m[2], m[3], v)
        block_value_display_map += "    %s:%s'%s',\n" % (v, m[5], m[6])
        if m[7] is not None:
            block_value_type_map += "    %s:%s'%s',\n" % (v, m[5], m[7])
    block_constant += '\n'
    block_name_value_map += '};\n\n'
    block_value_display_map += '};\n\n'
    block_value_type_map += '};\n\n'
    defines += block_constant
    defines += block_name_value_map
    defines += block_value_display_map
    if block_value_type_map.count('\n') > 3:
        defines += block_value_type_map
    with open(target, 'w', encoding='utf-8') as f:
        f.write(defines)


def main():
    convert_defines('../core/defines.go', '../web/js/defines.js')
    convert_defines('../core/errors.go', '../web/js/errors.js')


if __name__ == '__main__':
    os.chdir(os.path.dirname(__file__))
    main()
